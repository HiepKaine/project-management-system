---
kind: pipeline
type: docker
name: default

steps:
  - name: prepare
    image: busybox
    commands:
      - mkdir -p /cache/${DRONE_REPO}/docker
    volumes:
      - name: cache
        path: /cache

  - name: Install Packages
    image: node:16-alpine
    commands:
      - node -v
      - npm -v
      - yarn --version
      - yarn config set cache-folder /yarn
      - yarn install --pure-lockfile --production=false
    volumes:
      - name: yarn
        path: /yarn
    when:
      branch:
        - production
        - staging
        - dev

  - name: env:dev
    image: nightfuryest/drone-plugin-secret-to-env
    settings:
      template: .deploy/server/environment.dev.ts.template
      file: libs/shared/server/common/src/environments/environment.dev.ts
      envs:
        - DB_USER
        - DB_PASS
        - SMTP_PASS
      DB_USER:
        from_secret: DEFAULT_DB_ROOT_USER_DEV
      DB_PASS:
        from_secret: DEFAULT_DB_ROOT_PASSWORD_DEV
      SMTP_PASS:
        from_secret: SMTP_PASS
    when:
      branch:
        - dev

  - name: env:production
    image: nightfuryest/drone-plugin-secret-to-env
    settings:
      template: .deploy/server/environment.prod.template
      file: libs/shared/server/common/src/environments/environment.prod.ts
      envs:
        - DB_USER
        - DB_PASS
        - SMTP_PASS
      DB_USER:
        from_secret: DB_USER_PROD
      DB_PASS:
        from_secret: DB_PASS_PROD
      SMTP_PASS:
        from_secret: SMTP_PASS
    when:
      branch:
        - production

  - name: build:dev
    image: node:16-alpine
    commands:
      - npm install -g @nrwl/cli typescript
      - cat libs/shared/server/common/src/environments/environment.dev.ts > libs/shared/server/common/src/environments/environment.ts
      - cat libs/shared/frontend/common/src/environments/environment.dev.ts > libs/shared/frontend/common/src/environments/environment.ts
      - yarn nx run server:build:development
      - yarn nx run frontend:build:development
    volumes:
      - name: docker
        path: /var/lib/docker
    when:
      branch:
        - dev

  - name: build:prod
    image: node:16-alpine
    commands:
      - npm install -g @nrwl/cli typescript
      - cat libs/shared/server/common/src/environments/environment.prod.ts > libs/shared/server/common/src/environments/environment.ts
      - cat libs/shared/frontend/common/src/environments/environment.prod.ts > libs/shared/frontend/common/src/environments/environment.ts
      - yarn nx run server:build:production
      - yarn nx run frontend:build:production
    volumes:
      - name: docker
        path: /var/lib/docker
    when:
      branch:
        - production

  - name: build:api:image:dev
    image: plugins/docker
    settings:
      registry: registry.webpress.vn
      repo: registry.webpress.vn/onthithaytai
      dockerfile: apps/server/Dockerfile
      tags:
        - ${DRONE_COMMIT_BRANCH}
      create_repository: true
      use_cache: true
      username:
        from_secret: REGISTRY_WEBPRESS_DOCKER_USER
      password:
        from_secret: REGISTRY_WEBPRESS_DOCKER_PASSWORD
    volumes:
      - name: docker
        path: /var/lib/docker
      - name: dockerHost
        path: /var/run/docker.sock
    when:
      branch:
        - dev

  - name: build:api:image:production
    image: plugins/docker
    settings:
      registry: registry.webpress.vn
      repo: registry.webpress.vn/onthithaytai
      dockerfile: apps/server/Dockerfile.prod
      tags:
        - ${DRONE_COMMIT_BRANCH}
      create_repository: true
      use_cache: true
      username:
        from_secret: REGISTRY_WEBPRESS_DOCKER_USER
      password:
        from_secret: REGISTRY_WEBPRESS_DOCKER_PASSWORD
    volumes:
      - name: docker
        path: /var/lib/docker
      - name: dockerHost
        path: /var/run/docker.sock
    when:
      branch:
        - production

  - name: deploy:api:dev
    image: appleboy/drone-ssh
    settings:
      host:
        from_secret: API_DEV_WEBPRESS_IP
      ssh_key:
        from_secret: API_DEV_WEBPRESS_KEY
      port: 1080
      script_stop: true
      script:
        - docker pull registry.webpress.vn/onthithaytai:${DRONE_COMMIT_BRANCH}
        - docker stop onthithaytai || true
        - docker volume create onthithaytai || true
        - docker system prune -f
        - docker run -d --name=onthithaytai -v onthithaytai:/app/public/uploads --network=webpress registry.webpress.vn/onthithaytai:${DRONE_COMMIT_BRANCH}
    when:
      branch:
        - dev

  - name: deploy:api:production
    image: appleboy/drone-ssh
    settings:
      host:
        from_secret: PROD_IP
      ssh_key:
        from_secret: PROD_SECRET
      port: 22
      script_stop: true
      script:
        - docker pull registry.webpress.vn/onthithaytai:${DRONE_COMMIT_BRANCH}
        - docker container stop congchuc247 || true
        - docker volume create congchuc247 || true
        - docker system prune -f
        - docker run -d --name=congchuc247 -v congchuc247:/app/public/uploads --restart=always --network=webpress registry.webpress.vn/onthithaytai:${DRONE_COMMIT_BRANCH}
    when:
      branch:
        - production

  - name: deploy:dev:main
    image: plugins/s3
    settings:
      bucket: phatlocloto-vicoders-com
      source: dist/**/*
      region: ap-southeast-1
      strip_prefix: dist/apps/frontend
      acl: public-read
      target: /onthithaytai.vicoders.com
      access_key:
        from_secret: AWS_ACCESS_KEY
      secret_key:
        from_secret: AWS_SECRET_KEY
    when:
      branch:
        - dev

volumes:
  - name: cache
    host:
      path: /var/cache
  - name: docker
    host:
      path: /var/cache/${DRONE_REPO}/docker
  - name: yarn
    host:
      path: /var/cache/${DRONE_REPO}/yarn
  - name: dockerHost
    host:
      path: /var/run/docker.sock

trigger:
  branch:
    - dev
    - staging
    - production
